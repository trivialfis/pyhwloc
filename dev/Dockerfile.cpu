# Stage 1: Builder stage with doxygen and build dependencies
FROM condaforge/miniforge3:25.3.1-0 AS builder

RUN set -x \
    # basic dependencies
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/3bf863cc.pub && \
    apt-get update && apt-get upgrade -y && \
    apt install pkg-config -y

RUN mkdir ws

COPY pyhwloc_ext_dev.yml ws/pyhwloc_dev.yml

RUN mamba env update -n base -f ws/pyhwloc_dev.yml -v && mamba clean --all --yes

RUN \
    cd /ws && \
    git clone https://github.com/doxygen/doxygen.git && \
    cd doxygen && git checkout d49be63057d71f487312f43339516bc92cc685fa && cd -

RUN \
    cd /ws/ && \
    git clone https://github.com/open-mpi/hwloc.git && \
    cd hwloc && git checkout 02139ddc71ff2a0a8f241275db9ff4b686ab024a && cd -

SHELL ["mamba", "run", "--no-capture-output", "-n", "base", "/bin/bash", "-c"]

COPY install_doxygen.sh ws/install_doxygen.sh
COPY install_hwloc.sh ws/install_hwloc.sh
COPY build_doc_xml.sh ws/build_doc_xml.sh

# Build and install doxygen (needed for hwloc documentation)
RUN \
    cd /ws/ && \
    echo "con: CONDA_ENV ${CONDA_PREFIX}" && \
    ./install_doxygen.sh

# Build and install hwloc with documentation
RUN \
    cd /ws/ && \
    ./install_hwloc.sh && \
    ./build_doc_xml.sh

# Stage 2: Final runtime stage without doxygen and its build dependencies
FROM condaforge/miniforge3:25.3.1-0

RUN set -x \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2404/x86_64/3bf863cc.pub && \
    apt-get update && apt-get upgrade -y && \
    apt install pkg-config -y

RUN mkdir ws

COPY pyhwloc_dev.yml ws/pyhwloc_dev.yml

RUN mamba env update -n base -f ws/pyhwloc_dev.yml -v && mamba clean --all --yes

# Copy the document from the builder stage
COPY --from=builder /ws/xml /ws/xml
COPY --from=builder /ws/hwloc /ws/hwloc

COPY install_hwloc.sh ws/install_hwloc.sh

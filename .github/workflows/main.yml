name: pyhwloc CI

on: [push]

permissions:
  contents: read  # to fetch code (actions/checkout)

jobs:
  lint:
    name: Format and Lint
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: false
    - uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install packages
      run: |
        python3 -m pip install black isort mypy
    - name: Run lint
      run: |
        black --check .
        isort --profile=black --check .
        mypy .

  Linux-test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
    container:
      image: jiamingy/pyhwloc_dev:latest
    steps:
    - name: Build doxygen XML
      shell: bash -el {0}
      run: |
        echo $(pwd)
        cd /ws/hwloc/doc
        HWLOC_DOXYGEN_GENERATE_XML=YES doxygen ./doxygen.cfg
        cd /ws

    - name: Trust git cloning project sources
      run: |
        git config --global --add safe.directory "${GITHUB_WORKSPACE}"

    - uses: actions/checkout@v4
      with:
        submodules: 'fales'

    - name: Install pyhwloc editable
      shell: bash -el {0}
      run: |
        echo $(pwd)
        pip install -e . --no-deps --no-build-isolation
        git clean -xdf

    - name: Install pyhwloc with wheel
      shell: bash -el {0}
      run: |
        echo $(pwd)
        pip wheel . --no-build-isolation
        pip install pyhwloc-*.whl

    - name: Run tests
      shell: bash -el {0}
      run: |
        echo $(pwd)
        pytest -s -v -rxXs --durations=0 ./pyhwloc/tests

    - name: Build document
      shell: bash -el {0}
      run: |
        echo $(pwd)
        cd docs
        PYHWLOC_XML_PATH=/ws/hwloc/doc/doxygen-doc/xml make html
